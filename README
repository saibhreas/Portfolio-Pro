Profesional CSS only Styled Portfolio
https://github.com/saibhreas/Portfolio-Pro
This is an CSS styled Portfolio using basic css, no external libraries.


https://github.com/saibhreas/Portfolio-Pro/blob/main/assets/img/screenShot1.jpg  
Screen shot of project


![alt text](https://github.com/saibhreas/Portfolio-Pro/main/screenShot.jpg?raw=true)
![plot](./assets/img/screenShot1.png)








This will Be my professional portfolio.
This is just the initialization so far.

<<<<<<< HEAD
???*******************************************
**********************************************
MUST CONTAIN*************************

**************************************
README.md with:
   a project description, 
   a link to the deployed website, 
   a screenshot of your application. 
    The description allows the reader to understand your project, the link allows them to visit the site, and the screenshot is a preview of what they should expect. In the description, discuss what you did to refactor the code.


**************************************
=======

>>>>>>> 2e334832e13453731cca4debe391467b531ce89d
*Initial Site build using Depak Model
site beign built mobile first
mobile html is single column
  style sheet applied @ max-width 480px
##  Affected sytling:
header display: block;
h1-h5 fonst-size 140%
nav in its own container now with Icon on rt
 (space between)

## ***** REQUIRED CONTENT*******
  Avatar + Name + resposive Nav clean load on 3 page sizes
  UI links to sections on page
    Work links are titled images(Cards) of my developed applications
    -- First application's image should be large size than others (Larger card)
        -- clicking on images takes me to deployed application
  Site should be responsive to at least 3 broser sizes
    viewport and meia querries functional
###Criteria
*live URL Deplyment
* Errorless run of applications
* Github URL submition
*Repository shows commits, & documentation
  Avatar and name clearly upfront.
  Working nav links to About Work & Contact

* Quality--funtional mock up
* Repository follows best practices for class/id naming conventions, indentation, quality comments
*Readme contains Screen shots (whne done) + deployed link

## * Review
You are required to submit BOTH of the following for review:

* The URL of the deployed application.

* The URL of the GitHub repository that contains your code. Give the repository a unique name and include a README file that describes the project.
